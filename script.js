// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
let tg = window.Telegram.WebApp;
tg.expand();
tg.ready();

// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const user = tg.initDataUnsafe?.user;
let userId = user?.id;
const userName = user?.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
const userUsername = user?.username ? `@${user.username}` : '';

// –ü—Ä–æ–≤–µ—Ä–∫–∞ userId
if (!userId) {
    console.error('‚ùå User ID not found! Using test ID for development.');
    userId = 123456789; // –¢–µ—Å—Ç–æ–≤—ã–π ID –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
}

console.log('üë§ User info:', { userId, userName, userUsername });

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–º—ã
document.body.style.backgroundColor = tg.themeParams.bg_color || '#ffffff';
document.body.style.color = tg.themeParams.text_color || '#000000';

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let currentTab = 'photo';
let allContent = [];
let userPurchases = [];

// üî• –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–® –†–ï–ê–õ–¨–ù–´–ô RENDER URL
// –§–æ—Ä–º–∞—Ç: https://–≤–∞—à-app-name.onrender.com
const API_BASE = 'https://marketplace-bot-66rr.onrender.com';

console.log('üåê API Base URL:', API_BASE);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
async function init() {
    displayUserInfo();
    await loadContent();
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
function displayUserInfo() {
    const avatarEl = document.getElementById('userAvatar');
    const profileAvatar = document.getElementById('profileAvatar');
    const profileName = document.getElementById('profileName');
    const profileUsername = document.getElementById('profileUsername');
    
    if (user?.photo_url) {
        avatarEl.style.backgroundImage = `url(${user.photo_url})`;
        avatarEl.textContent = '';
        profileAvatar.style.backgroundImage = `url(${user.photo_url})`;
        profileAvatar.textContent = '';
    } else {
        avatarEl.textContent = userName.charAt(0).toUpperCase();
        profileAvatar.textContent = userName.charAt(0).toUpperCase();
    }
    
    profileName.textContent = userName;
    profileUsername.textContent = userUsername;
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
async function loadContent() {
    const contentGrid = document.getElementById('contentGrid');
    contentGrid.innerHTML = '<div class="loading">–ó–∞–≥—Ä—É–∑–∫–∞...</div>';
    
    try {
        const url = `${API_BASE}/api/content?type=${currentTab}&user_id=${userId}`;
        console.log('üîÑ Fetching:', url);
        
        const response = await fetch(url, {
            headers: {
                'Accept': 'application/json'
            }
        });
        
        if (!response.ok) {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
        
        allContent = await response.json();
        console.log('‚úÖ Content loaded:', allContent.length, 'items');
        
        if (userId) {
            const purchasesUrl = `${API_BASE}/api/purchases?user_id=${userId}`;
            console.log('üîÑ Fetching purchases:', purchasesUrl);
            
            const purchasesResponse = await fetch(purchasesUrl, {
                headers: {
                    'Accept': 'application/json'
                }
            });
            if (purchasesResponse.ok) {
                userPurchases = await purchasesResponse.json();
                console.log('‚úÖ Purchases loaded:', userPurchases.length, 'items');
            }
        }
        
        displayContent();
    } catch (error) {
        console.error('‚ùå Error loading content:', error);
        contentGrid.innerHTML = `
            <div class="empty">
                ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è<br>
                <small style="color: #999; margin-top: 10px; display: block;">
                    ${error.message}<br><br>
                    –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:<br>
                    1. –ó–∞–ø—É—â–µ–Ω –ª–∏ –±–æ—Ç –Ω–∞ Render<br>
                    2. –ü—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —É–∫–∞–∑–∞–Ω API_BASE –≤ script.js<br>
                    3. –î–æ—Å—Ç—É–ø–µ–Ω –ª–∏ —Å–µ—Ä–≤–∏—Å (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –Ω–∞ Render)
                </small>
            </div>
        `;
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
function displayContent() {
    const contentGrid = document.getElementById('contentGrid');
    const searchValue = document.getElementById('searchInput').value.toLowerCase();
    
    let filtered = allContent.filter(item => {
        const matchType = currentTab === 'photo' 
            ? item.type === 'photo' 
            : (item.type === 'video' || item.type === 'video_note');
        
        const matchSearch = searchValue === '' || item.id.toString().includes(searchValue);
        
        return matchType && matchSearch;
    });
    
    if (filtered.length === 0) {
        contentGrid.innerHTML = '<div class="empty">üì≠ –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω</div>';
        return;
    }
    
    contentGrid.innerHTML = filtered.map(item => {
        const isPurchased = item.purchased || item.price === 0;
        const icon = item.type === 'photo' ? 'üì∑' : (item.type === 'video_note' ? '‚≠ï' : 'üé•');
        const buttonText = isPurchased ? '‚úì –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å' : (item.price === 0 ? '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' : `–ö—É–ø–∏—Ç—å ${item.price} ‚≠ê`);
        const buttonClass = isPurchased ? 'purchased' : '';
        
        return `
            <div class="content-card" onclick="handleContentClick(${item.id}, ${isPurchased})">
                <div class="content-preview">${icon}</div>
                <div class="content-info">
                    <div class="content-type">#${item.id} ‚Ä¢ ${item.type === 'photo' ? '–§–æ—Ç–æ' : '–í–∏–¥–µ–æ'}</div>
                    <div class="content-price">${item.price === 0 ? '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' : `${item.price} ‚≠ê`}</div>
                    <button class="content-button ${buttonClass}">${buttonText}</button>
                </div>
            </div>
        `;
    }).join('');
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç
async function handleContentClick(contentId, isPurchased) {
    const item = allContent.find(c => c.id === contentId);
    if (!item) return;
    
    if (isPurchased || item.price === 0) {
        viewContent(item);
    } else {
        await purchaseContent(contentId, item.price);
    }
}

// –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞
function viewContent(item) {
    const modal = document.getElementById('viewModal');
    const viewContent = document.getElementById('viewContent');
    
    const icon = item.type === 'photo' ? 'üì∑' : (item.type === 'video_note' ? '‚≠ï' : 'üé•');
    viewContent.innerHTML = `
        <div style="font-size: 80px; margin: 20px 0;">${icon}</div>
        <h3>–ö–æ–Ω—Ç–µ–Ω—Ç #${item.id}</h3>
        <p style="color: var(--tg-theme-hint-color, #999); margin-top: 10px;">
            –¢–∏–ø: ${item.type}<br>
            –¶–µ–Ω–∞: ${item.price === 0 ? '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' : `${item.price} ‚≠ê`}
        </p>
        <p style="color: var(--tg-theme-hint-color, #999); margin-top: 15px; font-size: 14px;">
            –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –º–µ–¥–∏–∞—Ñ–∞–π–ª
        </p>
    `;
    
    modal.style.display = 'block';
}

// –ü–æ–∫—É–ø–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
async function purchaseContent(contentId, price) {
    try {
        const url = `${API_BASE}/api/create_invoice`;
        console.log('üîÑ Creating invoice:', url);
        
        tg.showAlert(`–ò–Ω–∏—Ü–∏–∏—Ä—É—é –ø–æ–∫—É–ø–∫—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞ #${contentId} –∑–∞ ${price} ‚≠ê...`);
        
        const response = await fetch(url, {
            method: 'POST',
            headers: { 
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            },
            body: JSON.stringify({ user_id: userId, content_id: contentId })
        });
        
        if (!response.ok) {
            throw new Error(`HTTP ${response.status}`);
        }
        
        const data = await response.json();
        console.log('‚úÖ Invoice response:', data);
        
        if (data.free || data.test_mode) {
            tg.showAlert('‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ø–æ–∫—É–ø–∫–∏!');
            await loadContent();
            return;
        }
        
        if (data.invoice_link) {
            tg.openInvoice(data.invoice_link, (status) => {
                if (status === 'paid') {
                    tg.showAlert('‚úÖ –ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞!');
                    loadContent();
                } else if (status === 'cancelled') {
                    tg.showAlert('–ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞');
                } else if (status === 'failed') {
                    tg.showAlert('‚ùå –û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã');
                }
            });
        }
        
    } catch (error) {
        console.error('‚ùå Purchase error:', error);
        tg.showAlert('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫—É–ø–∫–∏: ' + error.message);
    }
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
function switchTab(tab) {
    currentTab = tab;
    
    document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
    event.target.classList.add('active');
    
    loadContent();
}

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
function filterContent() {
    displayContent();
}

// –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
async function showProfile() {
    const modal = document.getElementById('profileModal');
    const purchasesList = document.getElementById('purchasesList');
    
    if (userPurchases.length === 0) {
        purchasesList.innerHTML = '<div class="empty">üì≠ –ü–æ–∫—É–ø–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç</div>';
    } else {
        purchasesList.innerHTML = userPurchases.map(item => {
            const icon = item.type === 'photo' ? 'üì∑' : (item.type === 'video_note' ? '‚≠ï' : 'üé•');
            const itemStr = JSON.stringify(item).replace(/"/g, '&quot;');
            return `<div class="purchase-item" onclick='viewContent(${itemStr})'>${icon}</div>`;
        }).join('');
    }
    
    modal.style.display = 'block';
}

// –ó–∞–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
function closeProfile() {
    document.getElementById('profileModal').style.display = 'none';
}

// –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
function closeViewModal() {
    document.getElementById('viewModal').style.display = 'none';
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –∏—Ö
window.onclick = function(event) {
    const profileModal = document.getElementById('profileModal');
    const viewModal = document.getElementById('viewModal');
    
    if (event.target === profileModal) {
        closeProfile();
    }
    if (event.target === viewModal) {
        closeViewModal();
    }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
init();
